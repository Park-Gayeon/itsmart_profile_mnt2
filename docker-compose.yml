services:
  itsm-mysql:
    container_name: itsm-mysql
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=dkdlxltmakxm1!
      - TZ=Asia/Seoul
    volumes:
      - itsm-mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    networks:
      - itsm-network

  itsm-backend:
    container_name: itsm-backend
    build:
      context: ./backend
      dockerfile: dockerfile
    ports:
      - "9999:9999"
    volumes:
      - /profileMnt:/profileMnt
    depends_on:
      - itsm-mysql
    networks:
      - itsm-network

  itsm-frontend:
    container_name: itsm-frontend
    build:
      context: ./frontend
      dockerfile: dockerfile
    ports:
      - "99:80"
    depends_on:
      - itsm-backend
    networks:
      - itsm-network

  itsm-jenkins:
    build:
      context: .
      dockerfile: dockerfile
    container_name: itsm-jenkins
    user: root     # Docker 소켓 접근을 위해 root 권한 필요
    ports:
      - "7777:8080"   # Jenkins 웹 인터페이스
      - "50000:50000" # Jenkins 에이전트 연결 포트
    volumes:
      - jenkins_home:/var/jenkins_home
      - ./jenkins-init:/var/jenkins_home/init.groovy.d # admin 계정으로 로그인
      - /var/run/docker.sock:/var/run/docker.sock      # Docker In Docker 지원을 위한 소켓 마운트
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - DOCKER_HOST=unix:///var/run/docker.sock        # Docker 호스트 설정
      - JAVA_HOME=/usr/lib/jvm/java-21-amazon-corretto # JDK 21 사용 설정
    networks:
      - itsm-network
volumes:
  itsm-mysql:
  jenkins_home:

networks:
  itsm-network:
    driver: bridge
